% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addCronjob.R, R/cronjobExists.R, R/deleteCronjob.R
\name{addCronjob}
\alias{addCronjob}
\alias{cronjobExists}
\alias{deleteCronjob}
\title{Task Scheduling}
\usage{
addCronjob(name, desc = NULL, env_vars, scheduled_time, script_path,
  overwrite = FALSE, verbose = FALSE, warn = FALSE, bashrc = TRUE,
  logLevel = "info")

cronjobExists(name)

deleteCronjob(name)
}
\arguments{
\item{name}{A unique name for this cronjob}

\item{desc}{A description of what the script does}

\item{env_vars}{A list of environment variables that need to be set for this cronjob}

\item{scheduled_time}{A list or string describing when the task should be run.}

\item{script_path}{The filepath to the script you want to automate}

\item{overwrite}{If the cronjob already exists, should it be overwritten?}

\item{verbose}{Should extra messages be displayed while the cronjob is being built?}

\item{warn}{Should errors stop the function or just give an warning?}

\item{bashrc}{Should the user's .bashrc file be loaded before running the script?}

\item{logLevel}{What is the minimum message level that should be logged?}
}
\description{
Add/remove a cronjob to automate an R script to your personal crontab
}
\details{
\code{cron} does not start a shell and therefore doesn't load environment variables that would normally get loaded. Use
\code{env.var} to set variables that are needed by your script and/or set \code{bashrc = TRUE} to load the user's
.bashrc file each time before the script is run.

\code{scheduled_time} should be either a named list containing any combination of \code{minute} (0-59), \code{hour} (0-23),
\code{day_of_month}(1-31), \code{month}(1-12)(Jan-Dec), \code{day_of_week}(0-7)(Sun-Sat) or a properly formatted cron string
For example, \code{scheduled_time = list(minute=30, hour=7, day_of_week=2)} would result in the task being scheduled for
7:30AM every Tuesday. \code{scheduled_time = "30 7 * * 2"} would accomplish the same thing.

\code{script_path} should point to the location of a script you wish to automate. The script will be copied to
the \code{.crontabR} directory in your home directory. Additional code will be copied to the beginning and end
of the script so that \code{crontabR}'s logging functions will work. It is this modified copy of the script
that will be run by \code{crontabR}.

\code{cronjobExists} reads your personal crontab to see if a cronjob of the
given name has been added by \code{crontabR}.

\code{deleteCronjob} will remove the lines in your crontab associated with the
named cronjob. It will also delete the script from the \code{.crontabR} directory.
}

